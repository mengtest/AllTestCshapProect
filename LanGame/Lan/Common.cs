// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from common.proto</summary>
public static partial class CommonReflection {

  #region Descriptor
  /// <summary>File descriptor for common.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CommonReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgxjb21tb24ucHJvdG8iIgoGSGVhZGVyEgsKA2NtZBgBIAIoAxILCgNzZXEY",
          "AiACKAU="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Header), global::Header.Parser, new[]{ "Cmd", "Seq" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Header : pb::IMessage<Header> {
  private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Header> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Header() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Header(Header other) : this() {
    _hasBits0 = other._hasBits0;
    cmd_ = other.cmd_;
    seq_ = other.seq_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Header Clone() {
    return new Header(this);
  }

  /// <summary>Field number for the "cmd" field.</summary>
  public const int CmdFieldNumber = 1;
  private readonly static long CmdDefaultValue = 0L;

  private long cmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Cmd {
    get { if ((_hasBits0 & 1) != 0) { return cmd_; } else { return CmdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cmd_ = value;
    }
  }
  /// <summary>Gets whether the "cmd" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasCmd {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cmd" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearCmd() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "seq" field.</summary>
  public const int SeqFieldNumber = 2;
  private readonly static int SeqDefaultValue = 0;

  private int seq_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Seq {
    get { if ((_hasBits0 & 2) != 0) { return seq_; } else { return SeqDefaultValue; } }
    set {
      _hasBits0 |= 2;
      seq_ = value;
    }
  }
  /// <summary>Gets whether the "seq" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasSeq {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "seq" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearSeq() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Header);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Header other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cmd != other.Cmd) return false;
    if (Seq != other.Seq) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCmd) hash ^= Cmd.GetHashCode();
    if (HasSeq) hash ^= Seq.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasCmd) {
      output.WriteRawTag(8);
      output.WriteInt64(Cmd);
    }
    if (HasSeq) {
      output.WriteRawTag(16);
      output.WriteInt32(Seq);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasCmd) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Cmd);
    }
    if (HasSeq) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seq);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Header other) {
    if (other == null) {
      return;
    }
    if (other.HasCmd) {
      Cmd = other.Cmd;
    }
    if (other.HasSeq) {
      Seq = other.Seq;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Cmd = input.ReadInt64();
          break;
        }
        case 16: {
          Seq = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
