// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: person.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from person.proto</summary>
public static partial class PersonReflection {

  #region Descriptor
  /// <summary>File descriptor for person.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PersonReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxwZXJzb24ucHJvdG8aDGNvbW1vbi5wcm90byKFAQoGUGVyc29uEhcKBmhl",
          "YWRlchgBIAIoCzIHLkhlYWRlchIKCgJpZBgCIAIoAxIMCgRuYW1lGAMgAigJ",
          "Eg8KA2FnZRgEIAEoBToCMTgSHgoFZW1haWwYBSABKAk6D3RvcGFtZW5nQHFx",
          "LmNvbRINCgVhcnJheRgGIAMoBSoICAoQgICAgAIiegoFUGhvbmUSCwoDbnVt",
          "GAEgASgJEh8KBHR5cGUYAiABKA4yES5QaG9uZS5QSE9ORV9UWVBFIiIKClBI",
          "T05FX1RZUEUSCgoGTU9CSUxFEAESCAoESE9NRRACMh8KBnBob25lcxIHLlBl",
          "cnNvbhgKIAMoCzIGLlBob25l"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::CommonReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Person), global::Person.Parser, new[]{ "Header", "Id", "Name", "Age", "Email", "Array" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Phone), global::Phone.Parser, new[]{ "Num", "Type" }, null, new[]{ typeof(global::Phone.Types.PHONE_TYPE) }, new pb::Extension[] { global::Phone.Extensions.Phones }, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Person : pb::IExtendableMessage<Person> {
  private static readonly pb::MessageParser<Person> _parser = new pb::MessageParser<Person>(() => new Person());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<Person> _extensions;
  private pb::ExtensionSet<Person> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Person> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PersonReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Person() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Person(Person other) : this() {
    _hasBits0 = other._hasBits0;
    header_ = other.HasHeader ? other.header_.Clone() : null;
    id_ = other.id_;
    name_ = other.name_;
    age_ = other.age_;
    email_ = other.email_;
    array_ = other.array_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Person Clone() {
    return new Person(this);
  }

  /// <summary>Field number for the "header" field.</summary>
  public const int HeaderFieldNumber = 1;
  private global::Header header_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Header Header {
    get { return header_; }
    set {
      header_ = value;
    }
  }
  /// <summary>Gets whether the header field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasHeader {
    get { return header_ != null; }
  }
  /// <summary>Clears the value of the header field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearHeader() {
    header_ = null;
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private readonly static long IdDefaultValue = 0L;

  private long id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 3;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "age" field.</summary>
  public const int AgeFieldNumber = 4;
  private readonly static int AgeDefaultValue = 18;

  private int age_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Age {
    get { if ((_hasBits0 & 2) != 0) { return age_; } else { return AgeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      age_ = value;
    }
  }
  /// <summary>Gets whether the "age" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasAge {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "age" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearAge() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 5;
  private readonly static string EmailDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("dG9wYW1lbmdAcXEuY29t"), 0, 15);

  private string email_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_ ?? EmailDefaultValue; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "email" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasEmail {
    get { return email_ != null; }
  }
  /// <summary>Clears the value of the "email" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearEmail() {
    email_ = null;
  }

  /// <summary>Field number for the "array" field.</summary>
  public const int ArrayFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_array_codec
      = pb::FieldCodec.ForInt32(48);
  private readonly pbc::RepeatedField<int> array_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Array {
    get { return array_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Person);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Person other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Header, other.Header)) return false;
    if (Id != other.Id) return false;
    if (Name != other.Name) return false;
    if (Age != other.Age) return false;
    if (Email != other.Email) return false;
    if(!array_.Equals(other.array_)) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasHeader) hash ^= Header.GetHashCode();
    if (HasId) hash ^= Id.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasAge) hash ^= Age.GetHashCode();
    if (HasEmail) hash ^= Email.GetHashCode();
    hash ^= array_.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasHeader) {
      output.WriteRawTag(10);
      output.WriteMessage(Header);
    }
    if (HasId) {
      output.WriteRawTag(16);
      output.WriteInt64(Id);
    }
    if (HasName) {
      output.WriteRawTag(26);
      output.WriteString(Name);
    }
    if (HasAge) {
      output.WriteRawTag(32);
      output.WriteInt32(Age);
    }
    if (HasEmail) {
      output.WriteRawTag(42);
      output.WriteString(Email);
    }
    array_.WriteTo(output, _repeated_array_codec);
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasHeader) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
    }
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasAge) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
    }
    if (HasEmail) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    size += array_.CalculateSize(_repeated_array_codec);
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Person other) {
    if (other == null) {
      return;
    }
    if (other.HasHeader) {
      if (!HasHeader) {
        Header = new global::Header();
      }
      Header.MergeFrom(other.Header);
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasAge) {
      Age = other.Age;
    }
    if (other.HasEmail) {
      Email = other.Email;
    }
    array_.Add(other.array_);
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 10: {
          if (!HasHeader) {
            Header = new global::Header();
          }
          input.ReadMessage(Header);
          break;
        }
        case 16: {
          Id = input.ReadInt64();
          break;
        }
        case 26: {
          Name = input.ReadString();
          break;
        }
        case 32: {
          Age = input.ReadInt32();
          break;
        }
        case 42: {
          Email = input.ReadString();
          break;
        }
        case 50:
        case 48: {
          array_.AddEntriesFrom(input, _repeated_array_codec);
          break;
        }
      }
    }
  }

  public TValue GetExtension<TValue>(pb::Extension<Person, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<Person, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<Person, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<Person, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<Person, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<Person, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<Person, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

public sealed partial class Phone : pb::IMessage<Phone> {
  private static readonly pb::MessageParser<Phone> _parser = new pb::MessageParser<Phone>(() => new Phone());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Phone> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PersonReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Phone() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Phone(Phone other) : this() {
    _hasBits0 = other._hasBits0;
    num_ = other.num_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Phone Clone() {
    return new Phone(this);
  }

  /// <summary>Field number for the "num" field.</summary>
  public const int NumFieldNumber = 1;
  private readonly static string NumDefaultValue = "";

  private string num_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Num {
    get { return num_ ?? NumDefaultValue; }
    set {
      num_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "num" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasNum {
    get { return num_ != null; }
  }
  /// <summary>Clears the value of the "num" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearNum() {
    num_ = null;
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 2;
  private readonly static global::Phone.Types.PHONE_TYPE TypeDefaultValue = global::Phone.Types.PHONE_TYPE.Mobile;

  private global::Phone.Types.PHONE_TYPE type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Phone.Types.PHONE_TYPE Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Phone);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Phone other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Num != other.Num) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasNum) hash ^= Num.GetHashCode();
    if (HasType) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasNum) {
      output.WriteRawTag(10);
      output.WriteString(Num);
    }
    if (HasType) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasNum) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Num);
    }
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Phone other) {
    if (other == null) {
      return;
    }
    if (other.HasNum) {
      Num = other.Num;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Num = input.ReadString();
          break;
        }
        case 16: {
          Type = (global::Phone.Types.PHONE_TYPE) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Phone message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum PHONE_TYPE {
      [pbr::OriginalName("MOBILE")] Mobile = 1,
      [pbr::OriginalName("HOME")] Home = 2,
    }

  }
  #endregion

  #region Extensions
  /// <summary>Container for extensions for other messages declared in the Phone message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Extensions {
    public static readonly pb::RepeatedExtension<global::Person, global::Phone> Phones =
      new pb::RepeatedExtension<global::Person, global::Phone>(10, pb::FieldCodec.ForMessage(82, global::Phone.Parser));
  }
  #endregion

}

#endregion


#endregion Designer generated code
